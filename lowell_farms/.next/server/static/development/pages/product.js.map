{"version":3,"file":"static/development/pages/product.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/index.js","webpack:///./components/AddToCart.js","webpack:///./components/DeliveryBanner.js","webpack:///./components/DetailDelivery.js","webpack:///./components/GearProductDetail.js","webpack:///./components/HempProductDetail.js","webpack:///./components/Newsletter.js","webpack:///./components/ProductDetail.js","webpack:///./components/Stockist.js","webpack:///./components/VariantSelector.js","webpack:///./components/ZipCodeCheck.js","webpack:///./components/ZipCodeForm.js","webpack:///./components/styles/ButtonDark.js","webpack:///./components/styles/ButtonGold.js","webpack:///./components/styles/DeliveryBarStyles.js","webpack:///./components/styles/DetailDeliveryStyles.js","webpack:///./components/styles/Input.js","webpack:///./components/styles/LearnMore.js","webpack:///./components/styles/NewsletterCallout.js","webpack:///./components/styles/ZipCodeCheckStyles.js","webpack:///./components/styles/sections/productDetailStyles.js","webpack:///./config.js","webpack:///./lib/helpers.js","webpack:///./pages/product.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"base-64\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"prismic-javascript\"","webpack:///external \"prismic-reactjs\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-moment\"","webpack:///external \"styled-components\"","webpack:///external \"zipcodes\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import Prismic from 'prismic-javascript';\nimport { PRISMIC_API_URL } from '../config';\n\nconst getBlogPostsAPI = async params => {\n  try {\n    // We initialise the API with Prismic's kit\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // Here we just query the documents with a filter of only returning\n    // the type of blog_post and order them. Full docs can be found here:\n    // https://github.com/prismicio/prismic-javascript#query-the-content\n    const response = await API.query(\n      Prismic.Predicates.at('document.type', 'blog_post'),\n      {\n        orderings: '[my.blog_post.date desc]',\n        ...params,\n        // params will be extra parameters we can pass through with api calls\n        // such as how many documents to return\n      }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getPageApi = async pageId => {\n  try {\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // we pass up the slug to request the correct post\n    const response = await API.query(\n      Prismic.Predicates.at('document.id', pageId),\n      { pageSize: 100 }\n    );\n    return response.results[0];\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nconst getPageByType = async pageType => {\n  try {\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // we pass up the slug to request the correct post\n    const response = await API.query(\n      Prismic.Predicates.at('document.type', pageType),\n      { pageSize: 100 }\n    );\n    return response.results;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport { getPageApi, getBlogPostsAPI, getPageByType };\n","import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ButtonDark from './styles/ButtonDark';\n\nconst CHECKOUT_QUERY = gql`\n  {\n    checkout @client {\n      id\n      lineItems {\n        edges\n      }\n      subtotalPrice\n      totalPrice\n      totalTax\n      webUrl\n    }\n  }\n`;\n\nconst CHECKOUT_ID_QUERY = gql`\n  {\n    checkoutId @client\n  }\n`;\n\nconst CREATE_CHECKOUT_MUTATION = gql`\n  mutation {\n    createOrUpdateCheckout @client\n  }\n`;\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems(first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_LINE_ITEM_MUTATION = gql`\n  mutation ADD_LINE_ITEM_MUTATION(\n    $checkoutId: ID!\n    $lineItems: [CheckoutLineItemInput!]!\n  ) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nconst REMOVE_ITEM_MUTATION = gql`\n  mutation REMOVE_ITEM_MUTATION($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(\n      checkoutId: $checkoutId\n      lineItemIds: $lineItemIds\n    ) {\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nconst UPDATE_LINE_ITEM_MUTATION = gql`\n  mutation UPDATE_LINE_ITEM_MUTATION(\n    $checkoutId: ID!\n    $lineItems: [CheckoutLineItemUpdateInput!]!\n  ) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nclass AddToCart extends Component {\n  render() {\n    const { id, price, availableForSale } = this.props;\n    // console.log(id);\n    let buttonText;\n    if (availableForSale) {\n      buttonText = (\n        <span>\n          Buy Now &ndash; <span>&#36;{price} </span>\n        </span>\n      );\n    } else {\n      buttonText = 'Coming Soon';\n    }\n\n    return (\n      <Query query={CHECKOUT_ID_QUERY}>\n        {({ data, error, loading }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error: {error.message}</p>;\n          return (\n            <Mutation\n              mutation={ADD_LINE_ITEM_MUTATION}\n              variables={{\n                checkoutId: data.checkoutId,\n                lineItems: [{ variantId: id, quantity: 1 }],\n              }}\n              update={(cache, { data: { checkoutLineItemsAdd } }) => {\n                const cartData = {\n                  data: {\n                    cartOpen: true,\n                  },\n                };\n                cache.writeData(cartData);\n\n                cache.writeQuery({\n                  query: CHECKOUT_QUERY,\n                  data: {\n                    checkout: [checkoutLineItemsAdd][0].checkout,\n                  },\n                });\n\n                localStorage.setItem(\n                  'checkout',\n                  JSON.stringify([checkoutLineItemsAdd][0].checkout)\n                );\n\n                localStorage.setItem(\n                  'checkoutId',\n                  [checkoutLineItemsAdd][0].checkout.id\n                );\n              }}\n            >\n              {checkoutLineItemsAdd => (\n                <ButtonDark\n                  type=\"button\"\n                  onClick={checkoutLineItemsAdd}\n                  className=\"add-to-cart\"\n                  disabled={!availableForSale}\n                >\n                  {buttonText}\n                </ButtonDark>\n              )}\n            </Mutation>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default AddToCart;\nexport {\n  CHECKOUT_ID_QUERY,\n  CHECKOUT_QUERY,\n  CREATE_CHECKOUT_MUTATION,\n  CheckoutFragment,\n  REMOVE_ITEM_MUTATION,\n  UPDATE_LINE_ITEM_MUTATION,\n};\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { RichText } from 'prismic-reactjs';\nimport zipcodes from 'zipcodes';\nimport { ZIP_CODE_QUERY } from './ZipCodeCheck';\nimport DeliveryBarStyles from './styles/DeliveryBarStyles';\n\nconst ZIP_BANNER_QUERY = gql`\n  query {\n    zipCodeBannerShowing @client\n  }\n`;\n\nconst TOGGLE_ZIP_BANNER_MUTATION = gql`\n  mutation {\n    toggleZipBanner @client\n  }\n`;\n\nclass DeliveryBanner extends Component {\n  state = {\n    slide: 0, // How much should the Navbar slide up or down\n    lastScrollY: 0, // Keep track of current position in state\n    position: 'down',\n  };\n\n  componentDidMount() {\n    // When this component mounts, begin listening for scroll changes\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    // If this component is unmounted, stop listening\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const { lastScrollY } = this.state;\n    const currentScrollY = window.scrollY;\n\n    if (currentScrollY > lastScrollY && currentScrollY > 150) {\n      this.setState({ position: 'up' });\n    } else {\n      this.setState({ position: 'down' });\n    }\n    this.setState({ lastScrollY: currentScrollY });\n  };\n\n  render() {\n    const { zipCodeData, handle } = this.props;\n\n    const cannabisZipCodes = zipCodeData.cannabis_delivery_zones;\n\n    const deliveryZipCodes = cannabisZipCodes.map(\n      zipCodeItem => zipCodeItem.zip_code\n    );\n\n    return (\n      <Query query={ZIP_BANNER_QUERY}>\n        {({ data: { zipCodeBannerShowing } }) => (\n          <Query query={ZIP_CODE_QUERY}>\n            {({ data: { zipCode } }) => {\n              if (zipCode == '') return null;\n\n              // GET STATE FROM ZIP CODE\n              const locationInfoByZip =\n                zipCode != '' ? zipcodes.lookup(zipCode) : '';\n              const zipCodeState =\n                locationInfoByZip != '' ? locationInfoByZip.state : '';\n\n              // LOGIC TO DETERMINE WHICH SCREEN SHOULD BE SHOWN\n              let screen;\n              let CBDExclusionZones;\n              let isInExcludedZone;\n\n              if (handle == 'CBD') {\n                // RESTRICT CBD SHIPPING TO SOME STATES\n                CBDExclusionZones =\n                  zipCodeData.cbd_exclusion_zones != '' &&\n                  zipCodeData.cbd_exclusion_zones != null\n                    ? RichText.asText(zipCodeData.cbd_exclusion_zones)\n                    : '';\n                isInExcludedZone = CBDExclusionZones.includes(zipCodeState);\n              }\n\n              // CBD - Display stockists if in CA,\n              // If outside CA -  CBD can be shipped so enable buy buttons and hide this section (default return)\n              if (handle == 'CBD' && isInExcludedZone && zipCodeState == 'CA') {\n                screen = 'cbd-stockists';\n              } else if (\n                (handle == 'CBD' &&\n                  zipCodeData.cbd_shipping_launched == 'false') ||\n                (handle == 'CBD' && isInExcludedZone)\n              ) {\n                screen = 'cbd-not-available';\n              } else if (handle == 'CBD' && zipCodeState != 'CA') {\n                screen = 'cbd-ship';\n              }\n\n              // console.log(screen);\n\n              // CANNABIS - Display stockists if in CA but not in delivery zone\n              // If not in CA show not available screen\n              // If in delivery zone enable buy buttons and hide this section completely (default return)\n              if (\n                handle == 'Cannabis' &&\n                zipCodeState == 'CA' &&\n                (!deliveryZipCodes.includes(zipCode) ||\n                  zipCodeData.delivery_service_launched != 'true')\n              ) {\n                screen = 'cannabis-stockists';\n              } else if (handle == 'Cannabis' && zipCodeState == 'CA') {\n                screen = 'cannabis-deliver';\n              }\n\n              // WE DELIVER CANNABIS TO YOUR LOCATION SCREEN\n              if (screen == 'cannabis-deliver') {\n                return (\n                  <DeliveryBarStyles\n                    zipUpdated={zipCodeBannerShowing}\n                    position={this.state.position}\n                  >\n                    <p>\n                      {zipCodeData.cannabis_delivery_zone_notification != '' &&\n                        RichText.asText(\n                          zipCodeData.cannabis_delivery_zone_notification\n                        )}\n                    </p>\n                  </DeliveryBarStyles>\n                );\n              }\n\n              // CANNABIS STOCKISTS SCREEN (IN CA, OUTSIDE DELIVERY ZONE)===========\n              if (screen == 'cannabis-stockists') {\n                return (\n                  <DeliveryBarStyles\n                    zipUpdated={zipCodeBannerShowing}\n                    position={this.state.position}\n                  >\n                    <p>\n                      {zipCodeData.cannabis_available_for_purchase_notificiation !=\n                        '' &&\n                        RichText.asText(\n                          zipCodeData.cannabis_available_for_purchase_notificiation\n                        )}\n                    </p>\n                  </DeliveryBarStyles>\n                );\n              }\n\n              // STOCKISTS SCREEN (CBD IN CA) ===========\n              if (screen == 'cbd-stockists') {\n                return (\n                  <DeliveryBarStyles\n                    zipUpdated={zipCodeBannerShowing}\n                    position={this.state.position}\n                  >\n                    <p>\n                      {zipCodeData.cbd_available_for_purchase_notification !=\n                        '' &&\n                        RichText.asText(\n                          zipCodeData.cbd_available_for_purchase_notification\n                        )}\n                    </p>\n                  </DeliveryBarStyles>\n                );\n              }\n\n              // WE SHIP TO YOUR LOCATION SCREEN (OUT OF CA)\n              if (screen == 'cbd-ship') {\n                return (\n                  <DeliveryBarStyles\n                    zipUpdated={zipCodeBannerShowing}\n                    position={this.state.position}\n                  >\n                    <p>\n                      {zipCodeData.cbd_available_for_shipping_notification !=\n                        '' &&\n                        RichText.asText(\n                          zipCodeData.cbd_available_for_shipping_notification\n                        )}\n                    </p>\n                  </DeliveryBarStyles>\n                );\n              }\n\n              if (screen == 'cbd-not-available') {\n                return (\n                  <DeliveryBarStyles\n                    zipUpdated={zipCodeBannerShowing}\n                    position={this.state.position}\n                  >\n                    <p>\n                      {zipCodeData.cbd_not_available_notification != '' &&\n                        RichText.asText(\n                          zipCodeData.cbd_not_available_notification\n                        )}\n                    </p>\n                  </DeliveryBarStyles>\n                );\n              }\n\n              // Cannabis & not in delivery zone\n              return (\n                <DeliveryBarStyles\n                  zipUpdated={zipCodeBannerShowing}\n                  style={{\n                    top: `${this.state.position}`,\n                  }}\n                >\n                  <p>\n                    {zipCodeData.cannabis_not_available_notification != '' &&\n                      RichText.asText(\n                        zipCodeData.cannabis_not_available_notification\n                      )}\n                  </p>\n                </DeliveryBarStyles>\n              );\n            }}\n          </Query>\n        )}\n      </Query>\n    );\n  }\n}\n\nexport default DeliveryBanner;\nexport { ZIP_BANNER_QUERY, TOGGLE_ZIP_BANNER_MUTATION };\n","import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport { RichText } from 'prismic-reactjs';\nimport Link from 'next/link';\nimport zipcodes from 'zipcodes';\nimport {\n  linkResolver,\n  mapStockistsToZip,\n  findClosestDeliveryServices,\n  findClosestRetailers,\n} from '../lib/helpers';\nimport ZipCodeForm from './ZipCodeForm';\n\nimport Stockist from './Stockist';\nimport DeliveryDetailStyles from './styles/DetailDeliveryStyles';\nimport AddToCart from './AddToCart';\nimport {\n  TOGGLE_ZIP_MUTATION,\n  ZIP_SCREEN_QUERY,\n  ZIP_CODE_QUERY,\n  UPDATE_ZIP_CODE_MUTATION,\n} from './ZipCodeCheck';\n\nclass DetailDelivery extends Component {\n  constructor(props) {\n    super(props);\n\n    const stockistsWithZip = mapStockistsToZip(this.props.stockists.stockists);\n\n    this.state = {\n      deliveryServices: this.props.stockists.delivery_services,\n      retailers: stockistsWithZip,\n    };\n  }\n\n  render() {\n    const {\n      deliveryZipCodes,\n      pageData,\n      handle,\n      stockists,\n      shopifyProduct,\n      productRoundedPrice,\n      zipCodeData,\n    } = this.props;\n\n    const deliveryClass = handle == 'CBD' ? 'cbd-delivery' : '';\n\n    return (\n      <Query query={ZIP_CODE_QUERY}>\n        {({ data: { zipCode } }) => {\n          const locationInfoByZip =\n            zipCode != '' ? zipcodes.lookup(zipCode) : '';\n          const zipCodeState =\n            locationInfoByZip != '' ? locationInfoByZip.state : '';\n\n          let screen;\n\n          const CBDExclusionZones =\n            zipCodeData.cbd_exclusion_zones != '' &&\n            zipCodeData.cbd_exclusion_zones != null\n              ? RichText.asText(zipCodeData.cbd_exclusion_zones)\n              : '';\n\n          // Show \"not available\" message if zip code is in a state that is excluded from shipping\n          if (\n            (handle == 'CBD' && zipCodeData.cbd_shipping_launched != 'true') ||\n            (handle == 'CBD' && CBDExclusionZones.includes(zipCodeState))\n          ) {\n            screen = 'ship';\n          }\n\n          // CANNABIS - Display stockists if in CA but not in delivery zone\n          // If not in CA show not available screen\n          // If in delivery zone enable buy buttons and hide this section completely (default return)\n          if (\n            handle == 'Cannabis' &&\n            zipCodeState == 'CA' &&\n            (!deliveryZipCodes.includes(zipCode) ||\n              zipCodeData.delivery_service_launched != 'true')\n          ) {\n            screen = 'stockists';\n          } else if (handle == 'Cannabis' && zipCodeState != 'CA') {\n            screen = 'ship';\n          }\n\n          if (zipCode == '' && handle == 'Cannabis') {\n            return (\n              <DeliveryDetailStyles className={deliveryClass}>\n                <h3 className=\"small-caps\">Price: ${productRoundedPrice}</h3>\n                <h2>\n                  {pageData.find_lowell_near_you_heading &&\n                    RichText.asText(pageData.find_lowell_near_you_heading)}\n                </h2>\n                <ZipCodeForm\n                  placeholderText=\"Your Zip Code\"\n                  buttonText=\"Check My Location\"\n                />\n\n                <div className=\"not-in-ca\">\n                  {pageData.not_in_ca_heading &&\n                    RichText.asText(pageData.not_in_ca_heading)}\n                </div>\n              </DeliveryDetailStyles>\n            );\n          }\n          if (screen == 'ship') {\n            return (\n              <DeliveryDetailStyles className={deliveryClass}>\n                <div className=\"not-available-wrapper\">\n                  <h2>\n                    {pageData.not_available_for_delivery_heading &&\n                      RichText.asText(\n                        pageData.not_available_for_delivery_heading\n                      )}\n                  </h2>\n                </div>\n                <Mutation mutation={TOGGLE_ZIP_MUTATION}>\n                  {toggleZipCodeCheck => (\n                    <a\n                      href=\"#\"\n                      onClick={toggleZipCodeCheck}\n                      className=\"text-button\"\n                    >\n                      Not in {zipCode}? Change location.\n                    </a>\n                  )}\n                </Mutation>\n              </DeliveryDetailStyles>\n            );\n          }\n          if (screen == 'stockists') {\n            const closestRetailers = findClosestRetailers(\n              this.state.retailers,\n              zipCode,\n              zipcodes\n            );\n\n            const closestDeliveryServices = findClosestDeliveryServices(\n              this.state.deliveryServices,\n              zipCode\n            );\n            return (\n              <DeliveryDetailStyles\n                className={`deliveryClass ${deliveryClass}`}\n              >\n                <div className=\"no-delivery-wrapper\">\n                  <h2>Here’s where you can find Lowell near {zipCode}…</h2>\n\n                  <div className=\"stockists-and-retailers\">\n                    {/* ============================== */}\n                    {/* RETAILERS */}\n                    {/* ============================== */}\n                    <div>\n                      <h2 className=\"section-title small-caps\">\n                        <span>\n                          <img\n                            src={stockists.retailers_icon.url}\n                            alt=\"Lowell Retailers\"\n                            width=\"25\"\n                          />\n                        </span>\n                        {RichText.asText(stockists.retailers_heading)}\n                      </h2>\n\n                      <ul>\n                        {closestRetailers != '' &&\n                          closestRetailers.map((retailer, index) => {\n                            if (index > 2) return null;\n                            return (\n                              <div className=\"stockist-item\">\n                                <Stockist\n                                  key={RichText.asText(retailer.stockist_name)}\n                                  stockist={retailer}\n                                  stockistType=\"retailer\"\n                                />\n                              </div>\n                            );\n                          })}\n                      </ul>\n                    </div>\n                    {/* ============================== */}\n                    {/* Delivery Services */}\n                    {/* ============================== */}\n                    {closestDeliveryServices.length > 0 && (\n                      <div>\n                        <h2 className=\"section-title small-caps\">\n                          <span>\n                            <img\n                              src={stockists.delivery_services_icon.url}\n                              alt=\"Lowell Retailers\"\n                              width=\"25\"\n                            />\n                          </span>\n                          {RichText.asText(stockists.delivery_services_heading)}\n                        </h2>\n\n                        <ul>\n                          {closestDeliveryServices.map(\n                            (deliveryService, index) => {\n                              if (index > 2) return null;\n                              return (\n                                <div className=\"stockist-item\">\n                                  <Stockist\n                                    key={RichText.asText(\n                                      deliveryService.delivery_service_name\n                                    )}\n                                    stockist={deliveryService}\n                                    stockistType=\"delivery\"\n                                  />\n                                </div>\n                              );\n                            }\n                          )}\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n\n                  <Link href=\"/stockists\">\n                    <a className=\"view-more\">\n                      VIEW MORE RETAILERS AND DELIVERY SERVICES\n                    </a>\n                  </Link>\n                </div>\n              </DeliveryDetailStyles>\n            );\n          }\n          return (\n            <AddToCart\n              id={shopifyProduct.variants.edges[0].node.id}\n              price={productRoundedPrice}\n              availableForSale={shopifyProduct.availableForSale}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default DetailDelivery;\n","/* eslint-disable react/prop-types */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { RichText } from 'prismic-reactjs';\nimport ButtonGold from './styles/ButtonGold';\nimport Newsletter from './Newsletter';\nimport LearnMore from './styles/LearnMore';\nimport AddToCart from './AddToCart';\nimport {\n  ProductDetailPage,\n  CannabisLinks,\n} from './styles/sections/productDetailStyles';\nimport VariantSelector from './VariantSelector';\n\nclass ProductPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.shopifyProduct.options.forEach(selector => {\n      this.setState({\n        selectedOptions: { [selector.name]: selector.values[0] },\n      });\n    });\n  }\n\n  handleOptionChange(event) {\n    const { target } = event;\n    const { selectedOptions } = this.state;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = this.props.shopifyProduct.variants.edges.find(\n      variant =>\n        variant.node.selectedOptions.every(\n          selectedOption =>\n            selectedOptions[selectedOption.name] === selectedOption.value\n        )\n    ).node;\n\n    this.setState({\n      selectedVariant,\n      selectedVariantImage: selectedVariant.image.src,\n    });\n  }\n\n  render() {\n    const {\n      pageData,\n      quotesData,\n      shopifyProduct,\n      newsletterData,\n      productInfo,\n      sitewideData,\n    } = this.props;\n\n    let metaTitle;\n    if (productInfo.meta_title != null && productInfo.meta_title != '') {\n      metaTitle = productInfo.meta_title;\n    } else if (\n      productInfo.product_title != null &&\n      productInfo.product_title != ''\n    ) {\n      metaTitle = RichText.asText(productInfo.product_title);\n    }\n\n    let metaDescription;\n    if (\n      productInfo.meta_description != null &&\n      productInfo.meta_description != ''\n    ) {\n      metaDescription = productInfo.meta_description;\n    } else if (\n      productInfo.full_product_description != null &&\n      productInfo.full_product_description != ''\n    ) {\n      metaDescription = RichText.asText(productInfo.full_product_description);\n    } else {\n      metaDescription = RichText.asText(productInfo.title);\n    }\n\n    let aboutImage;\n\n    switch (productInfo.shopify_product.product_type) {\n      case 'Accessories':\n        aboutImage = pageData.accessories_footer_image;\n        break;\n      case 'Apparel':\n        aboutImage = pageData.apparel_footer_image;\n        break;\n      default:\n        aboutImage = pageData.learn_more_image;\n    }\n\n    const variant =\n      this.state.selectedVariant || shopifyProduct.variants.edges[0].node;\n\n    const variant_selectors =\n      shopifyProduct.options[0].values.length > 1 &&\n      shopifyProduct.options.map(option => (\n        <VariantSelector\n          handleOptionChange={this.handleOptionChange}\n          key={option.id.toString()}\n          option={option}\n        />\n      ));\n\n    const productRoundedPrice = shopifyProduct.variants.edges[0].node.price.replace(\n      /\\.00$/,\n      ''\n    );\n\n    return (\n      <ProductDetailPage>\n        <Head>\n          <title>Lowell Herb Co | {metaTitle}</title>\n          <meta name=\"description\" content={metaDescription} />\n          {productInfo.keywords != null && (\n            <meta name=\"keywords\" content={productInfo.keywords} />\n          )}\n        </Head>\n        <div className=\"container header\">\n          <div className=\"cols-55p\">\n            <div className=\"v-h-aligner\">\n              <div>\n                <img\n                  src={\n                    productInfo &&\n                    productInfo.product_detail_image_gallery.length > 0 &&\n                    productInfo.product_detail_image_gallery[0].gallery_image\n                      .url\n                  }\n                  alt={shopifyProduct.title}\n                />\n              </div>\n            </div>\n            <div className=\"vertical-aligner\">\n              {/* PRODUCT INFO CARD */}\n              <div className=\"product-info-card\">\n                <h1 className=\"small-caps dashed-underline\">\n                  {shopifyProduct.title}\n                </h1>\n                <div className=\"description\">\n                  {productInfo &&\n                    RichText.asText(productInfo.full_product_description)}\n                </div>\n                {variant_selectors}\n                <AddToCart\n                  id={variant.id}\n                  price={productRoundedPrice}\n                  availableForSale={shopifyProduct.availableForSale}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <CannabisLinks>\n          <div className=\"container\">\n            <div className=\"cols-2\">\n              <div className=\"link-card\">\n                <Link href=\"/cannabis\">\n                  <a>\n                    <h3>Lowell Cannabis</h3>\n                    <p>View Products</p>\n                  </a>\n                </Link>\n              </div>\n              <div className=\"link-card\">\n                <Link href=\"/cbd\">\n                  <a>\n                    <h3>Lowell CBD</h3>\n                    <p>View Products</p>\n                  </a>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </CannabisLinks>\n        <LearnMore className=\"container padding-bottom\">\n          <div className=\"cols-2\">\n            <div>\n              <img\n                src={aboutImage && aboutImage.url}\n                alt=\"Learn More about Lowell\"\n              />\n            </div>\n            <div className=\"vertical-aligner\">\n              <div className=\"small-inner\">\n                <p className=\"quote\">\n                  &ldquo;{quotesData[0].quote[0].text}&rdquo;\n                </p>\n                <p className=\"publication small-caps\">\n                  &ndash; {quotesData[0].publication[0].text}\n                </p>\n                <Link href=\"/about\">\n                  <ButtonGold>\n                    {pageData.learn_more_button_text[0].text}\n                  </ButtonGold>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </LearnMore>\n        <Newsletter newsletterData={newsletterData} page=\"cannabis\" />\n      </ProductDetailPage>\n    );\n  }\n}\n\nexport default ProductPage;\n","/* eslint-disable react/prop-types */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { RichText, Date } from 'prismic-reactjs';\nimport styled from 'styled-components';\nimport Moment from 'react-moment';\nimport { linkResolver } from '../lib/helpers';\nimport Newsletter from './Newsletter';\nimport ButtonGold from './styles/ButtonGold';\nimport LearnMore from './styles/LearnMore';\nimport {\n  ProductDetailPage,\n  InsidePackSection,\n} from './styles/sections/productDetailStyles';\n// import DeliveryBanner from './DeliveryBanner';\n\nimport DetailDelivery from './DetailDelivery';\n\nclass ProductPage extends Component {\n  render() {\n    const {\n      pageData,\n      quotesData,\n      productInfo,\n      shopifyProduct,\n      newsletterData,\n      stockists,\n      deliveryZipCodes,\n      zipCodeData,\n    } = this.props;\n\n    let metaTitle;\n    if (productInfo.meta_title != null && productInfo.meta_title != '') {\n      metaTitle = productInfo.meta_title;\n    } else if (productInfo.title != null && productInfo.title != '') {\n      metaTitle = RichText.asText(productInfo.title);\n    }\n\n    let metaDescription;\n    if (\n      productInfo.meta_description != null &&\n      productInfo.meta_description != ''\n    ) {\n      metaDescription = productInfo.meta_description;\n    } else if (\n      productInfo.product_description != null &&\n      productInfo.product_description != ''\n    ) {\n      metaDescription = RichText.asText(productInfo.product_description);\n    } else {\n      metaDescription = RichText.asText(productInfo.title);\n    }\n\n    const aboutImageCategory = `${productInfo.shopify_product.product_type} ${\n      productInfo.product_category\n    }`;\n\n    let aboutImage;\n\n    switch (aboutImageCategory) {\n      case 'Cannabis Pack':\n        aboutImage = pageData.learn_more_image;\n        break;\n      case 'Cannabis Individual Smoke':\n        aboutImage = pageData.cannabis_individual_smoke_footer_image;\n        break;\n      case 'Cannabis Flower':\n        aboutImage = pageData.cannabis_flower_footer_image;\n        break;\n      case 'CBD Pack':\n        aboutImage = pageData.cbd_pack_footer_image;\n        break;\n      case 'CBD Individual Smoke':\n        aboutImage = pageData.cbd_individual_smoke_footer_image;\n        break;\n      case 'CBD Flower':\n        aboutImage = pageData.cbd_flower_footer_image;\n        break;\n      default:\n        aboutImage = pageData.learn_more_image;\n    }\n    const showPackInfo =\n      productInfo.product_category != 'Flower' &&\n      productInfo.product_category != 'Individual Smoke' &&\n      productInfo.hide_inside_pack_section != 'True';\n\n    const ImageSeparator = styled.section`\n      padding-bottom: 100px;\n    `;\n\n    let productType;\n    let quantity;\n    let packageDate;\n    let productWeight;\n    let labResults;\n    let curatedMixture;\n\n    // TYPE\n    if (productInfo && RichText.asText(productInfo.type) != '') {\n      productType = (\n        <p className=\"type\">\n          <img\n            className=\"icon\"\n            src=\"../static/icon.svg\"\n            alt=\"Lowell Icon\"\n            width=\"18\"\n          />\n          {productInfo.type != '' && RichText.asText(productInfo.type)}\n        </p>\n      );\n    }\n\n    // QUANTITY\n    if (productInfo && RichText.asText(productInfo.quantity) != '') {\n      quantity = (\n        <p className=\"info-item  split-text\">\n          <span>\n            {pageData.quantity != '' && RichText.asText(pageData.quantity)}:\n          </span>\n          <span>\n            {productInfo.quantity != '' &&\n              RichText.asText(productInfo.quantity)}\n          </span>\n        </p>\n      );\n    }\n\n    // DATE\n    if (productInfo && productInfo.packaged_date != '') {\n      const date = Date(productInfo.packaged_date);\n      packageDate = <Moment format=\"MM/DD/YYYY\">{date}</Moment>;\n      packageDate = (\n        <p className=\"info-item split-text\">\n          <span>\n            {pageData.packaged != '' && RichText.asText(pageData.packaged)}:\n          </span>\n          <span>{packageDate}</span>\n        </p>\n      );\n    }\n\n    // LAB RESULTS\n    if (\n      productInfo &&\n      productInfo.lab_results != '' &&\n      productInfo.lab_results[0].lab_result_item != ''\n    ) {\n      labResults = (\n        <div className=\"inside-pack-list\">\n          <h5>\n            {pageData.lab_results_heading != '' &&\n              RichText.asText(pageData.lab_results_heading)}\n          </h5>\n          <ul>\n            {productInfo.lab_results.map(result => (\n              <li\n                key={\n                  result.lab_result_item != '' &&\n                  RichText.asText(result.lab_result_item)\n                }\n                className=\"split-text\"\n              >\n                <span className=\"small-nitti-caps\">\n                  {result.lab_result_item != '' &&\n                    RichText.asText(result.lab_result_item)}\n                </span>\n                <span className=\"thin-nitti-caps\">\n                  {RichText.asText(result.percentage)}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n\n    // MIXTURE\n    if (\n      productInfo &&\n      productInfo.mixture != '' &&\n      productInfo.mixture[0].mixture_title != ''\n    ) {\n      curatedMixture = (\n        <div className=\"inside-pack-list\">\n          <h5>\n            {pageData.mixture_of_heading != '' &&\n              RichText.asText(pageData.mixture_of_heading)}\n          </h5>\n          <ul>\n            {productInfo.mixture.map(item => (\n              <li\n                key={RichText.asText(item.mixture_title)}\n                className=\"split-text\"\n              >\n                <span className=\"small-nitti-caps\">\n                  {RichText.asText(item.mixture_title)}\n                </span>\n                {item.thc_percentage1 !== null &&\n                  item.thc_percentage1[0].text != '' && (\n                    <span className=\"border-left thin-nitti-caps\">\n                      {RichText.asText(item.thc_percentage1)}\n                    </span>\n                  )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n\n    // WEIGHT\n    if (shopifyProduct.variants.edges[0].node.weight > 0) {\n      productWeight = `${shopifyProduct.variants.edges[0].node.weight} ${\n        shopifyProduct.variants.edges[0].node.weightUnit\n      }`;\n      productWeight = (\n        <p className=\"info-item  split-text\">\n          <span>\n            {pageData.weight != '' && RichText.asText(pageData.weight)}:\n          </span>\n          <span>{productWeight}</span>\n        </p>\n      );\n    }\n\n    // PRICE\n    const productRoundedPrice = shopifyProduct.variants.edges[0].node.price.replace(\n      /\\.00$/,\n      ''\n    );\n\n    let fullWidthSeparator;\n\n    if (\n      productInfo &&\n      productInfo.product_detail_divider_image != '' &&\n      !(\n        Object.entries(productInfo.product_detail_divider_image).length === 0 &&\n        productInfo.product_detail_divider_image.constructor === Object\n      )\n    ) {\n      fullWidthSeparator = productInfo.product_detail_divider_image.url;\n    } else if (pageData.image_separator != '') {\n      fullWidthSeparator = pageData.image_separator.url;\n    }\n\n    let percentageUnit;\n\n    if (productInfo && productInfo.percentage_unit != '') {\n      percentageUnit = RichText.asText(productInfo.percentage_unit);\n    } else {\n      percentageUnit = 'THC';\n    }\n\n    return (\n      <ProductDetailPage>\n        <Head>\n          <title>Lowell Herb Co | {metaTitle}</title>\n          <meta name=\"description\" content={metaDescription} />\n          {productInfo.keywords != null && (\n            <meta name=\"keywords\" content={productInfo.keywords} />\n          )}\n        </Head>\n        <div className=\"container header\">\n          <div className=\"cols-55p\">\n            <div className=\"vertical-aligner\">\n              <img\n                src={\n                  productInfo &&\n                  productInfo.product_detail_image != '' &&\n                  productInfo.product_detail_image.url\n                }\n                alt={shopifyProduct.title}\n              />\n            </div>\n            {/* PRODUCT INFO CARD */}\n            <div className=\"product-info-card\">\n              <div className=\"split-text\">\n                {productType}\n                <p className=\"percent\">\n                  {productInfo && RichText.asText(productInfo.thc_percentage)}{' '}\n                  <span>{percentageUnit}</span>\n                </p>\n              </div>\n              <h1 className=\"small-caps dashed-underline\">\n                {shopifyProduct.title}\n              </h1>\n              <div className=\"thin-caps\">\n                {productInfo.product_category != undefined &&\n                productInfo.product_category == 'Flower'\n                  ? 'strain'\n                  : 'blend'}\n              </div>\n              <p className=\"dashed-underline farms\">\n                {/* Farms */}\n\n                {productInfo &&\n                  productInfo.farms.map((farm, index) => {\n                    const commaSeparator =\n                      index < productInfo.farms.length - 1 ? ', ' : '';\n                    if (RichText.asText(farm.farm_url) != '') {\n                      return (\n                        <span\n                          key={\n                            farm.farm_handle != '' &&\n                            RichText.asText(farm.farm_handle)\n                          }\n                        >\n                          <a href={RichText.asText(farm.farm_url)}>\n                            {RichText.asText(farm.farm_handle)}\n                          </a>\n                          {commaSeparator}\n                        </span>\n                      );\n                    }\n                    return (\n                      <span key={RichText.asText(farm.farm_handle)}>\n                        {RichText.asText(farm.farm_handle)}\n                        {commaSeparator}\n                      </span>\n                    );\n                  })}\n              </p>\n              <div className=\"thin-caps\">\n                {pageData.farms != '' && RichText.asText(pageData.farms)}\n              </div>\n              <div className=\"info-items\">\n                {productWeight}\n                {quantity}\n                {packageDate}\n              </div>\n\n              <DetailDelivery\n                deliveryZipCodes={deliveryZipCodes}\n                pageData={pageData}\n                handle={\n                  productInfo.shopify_product &&\n                  productInfo.shopify_product.product_type\n                }\n                stockists={stockists}\n                shopifyProduct={shopifyProduct}\n                productRoundedPrice={productRoundedPrice}\n                zipCodeData={zipCodeData}\n              />\n            </div>\n          </div>\n        </div>\n        {showPackInfo && (\n          <ImageSeparator className=\"container\">\n            <img src={fullWidthSeparator} alt=\"Learn More about Lowell\" />\n          </ImageSeparator>\n        )}\n        {showPackInfo && (\n          <InsidePackSection>\n            <div className=\"container\">\n              <div className=\"cols-2\">\n                <div>\n                  <h3>\n                    {pageData.inside_pack_heading &&\n                      RichText.asText(pageData.inside_pack_heading)}\n                  </h3>\n                  <div className=\"rich-text\">\n                    {productInfo &&\n                      RichText.render(\n                        productInfo.product_description,\n                        linkResolver\n                      )}\n                  </div>\n                  <p className=\"thin-caps\">\n                    {pageData.flower_from_heading &&\n                      RichText.asText(pageData.flower_from_heading)}\n                  </p>\n                  <ul className=\"farms\">\n                    {productInfo &&\n                      productInfo.farms.map((farm, index) => {\n                        if (RichText.asText(farm.farm_url) != '') {\n                          return (\n                            <li key={RichText.asText(farm.farm_handle)}>\n                              <a href={RichText.asText(farm.farm_url)}>\n                                {RichText.asText(farm.farm_handle)}\n                              </a>\n                            </li>\n                          );\n                        }\n                        return (\n                          <li key={RichText.asText(farm.farm_handle)}>\n                            {RichText.asText(farm.farm_handle)}\n                          </li>\n                        );\n                      })}\n                  </ul>\n                </div>\n                <div>\n                  {curatedMixture}\n                  {labResults}\n                </div>\n              </div>\n            </div>\n          </InsidePackSection>\n        )}\n        <LearnMore\n          className={`container padding-bottom ${\n            showPackInfo ? '' : 'no-padding-top'\n          }`}\n        >\n          <div className=\"cols-2\">\n            <div>\n              <img\n                src={aboutImage != '' && aboutImage.url}\n                alt=\"Learn More about Lowell\"\n              />\n            </div>\n            <div className=\"vertical-aligner\">\n              <div className=\"small-inner\">\n                <p className=\"quote\">\n                  &ldquo;{quotesData[0].quote[0].text}&rdquo;\n                </p>\n                <p className=\"publication small-caps\">\n                  &ndash; {quotesData[0].publication[0].text}\n                </p>\n                <Link href=\"/about\">\n                  <ButtonGold>\n                    {pageData.learn_more_button_text != '' &&\n                      pageData.learn_more_button_text[0].text}\n                  </ButtonGold>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </LearnMore>\n        <Newsletter newsletterData={newsletterData} page=\"cannabis\" />\n      </ProductDetailPage>\n    );\n  }\n}\n\nexport default ProductPage;\n","import React, { Component } from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport NewsletterCallout from './styles/NewsletterCallout';\nimport Input from './styles/Input';\nimport ButtonDark from './styles/ButtonDark';\n\nexport default class Newsletter extends Component {\n  state = {\n    emailAddress: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ emailAddress: value });\n  };\n\n  render() {\n    const { newsletterData, page } = this.props;\n\n    let bgColor;\n\n    switch (page) {\n      case 'cbd':\n        bgColor = '#d1d3cb';\n        break;\n      case 'cannabis':\n        bgColor = '#C4C0B0';\n        break;\n      case 'cafe':\n        bgColor = '#C4C0B0';\n        break;\n      default:\n        bgColor = '#ECEBE9';\n    }\n\n    return (\n      <NewsletterCallout style={{ backgroundColor: bgColor }}>\n        <div id=\"mc_embed_signup\">\n          <form\n            action=\"https://lowellsmokes.us17.list-manage.com/subscribe/post?u=092e1f0ca656e0ef4ceb5bb0d&amp;id=1597a2471d\"\n            method=\"post\"\n            id=\"mc-embedded-subscribe-form\"\n            name=\"mc-embedded-subscribe-form\"\n            className=\"validate container\"\n            target=\"_blank\"\n            noValidate\n          >\n            <h4>\n              {newsletterData.newsletter_heading != '' &&\n                RichText.asText(newsletterData.newsletter_heading)}\n            </h4>\n            <div id=\"mc_embed_signup_scroll\">\n              <div className=\"mc-field-group\">\n                <Input\n                  type=\"email\"\n                  onChange={this.handleChange}\n                  value={this.state.emailAddress}\n                  name=\"EMAIL\"\n                  className=\"required email\"\n                  id=\"mce-EMAIL\"\n                  placeholder={\n                    newsletterData.newsletter_placeholder_text != '' &&\n                    RichText.asText(newsletterData.newsletter_placeholder_text)\n                  }\n                />\n              </div>\n              <div id=\"mce-responses\" className=\"clear\">\n                <div\n                  className=\"response\"\n                  id=\"mce-error-response\"\n                  style={{ display: 'none' }}\n                />\n                <div\n                  className=\"response\"\n                  id=\"mce-success-response\"\n                  style={{ display: 'none' }}\n                />\n              </div>\n              <div\n                style={{ position: 'absolute', left: '-5000px' }}\n                aria-hidden=\"true\"\n              >\n                <input\n                  type=\"text\"\n                  name=\"b_092e1f0ca656e0ef4ceb5bb0d_1597a2471d\"\n                  tabIndex=\"-1\"\n                  value=\"\"\n                  readOnly\n                />\n              </div>\n              <ButtonDark\n                type=\"submit\"\n                name=\"subscribe\"\n                id=\"mc-embedded-subscribe\"\n              >\n                {newsletterData.newsletter_button_text != '' &&\n                  RichText.asText(newsletterData.newsletter_button_text)}\n              </ButtonDark>\n            </div>\n          </form>\n        </div>\n      </NewsletterCallout>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport base64 from 'base-64';\nimport HempProductDetail from './HempProductDetail';\nimport GearProductDetail from './GearProductDetail';\n\nclass ProductDetail extends Component {\n  render() {\n    const {\n      pageData,\n      quotesData,\n      products,\n      gearProducts,\n      newsletterData,\n      stockists,\n      deliveryZipCodes,\n      zipCodeData,\n      sitewideData,\n    } = this.props;\n\n    return (\n      <div>\n        <Query\n          query={SINGLE_PRODUCT_QUERY}\n          variables={{\n            handle: this.props.handle,\n          }}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            if (!data.shop.productByHandle) <p>This item no longer exists</p>;\n\n            // Create an object of Prismic data with the Shopify IDs as keys\n            const prismicProductData = {};\n\n            // console.log(products);\n            // return <p>Test</p>;\n\n            for (let i = 0; i < products.length; i++) {\n              // console.log(products[i].data.shopify_product != null);\n              const productId =\n                products[i].data.shopify_product != '' &&\n                products[i].data.shopify_product != null\n                  ? products[i].data.shopify_product.id\n                  : '';\n              prismicProductData[productId] = products[i];\n            }\n            for (let i = 0; i < gearProducts.length; i++) {\n              const productId =\n                gearProducts[i].data.shopify_product != ''\n                  ? gearProducts[i].data.shopify_product.id\n                  : '';\n              prismicProductData[productId] = gearProducts[i];\n            }\n\n            const selectedProduct = data.shop.productByHandle;\n\n            const selectedProductCollection =\n              selectedProduct.collections.edges[0].node.handle;\n            const shopifyId = base64.decode(selectedProduct.id);\n            const productId = /[^/]*$/.exec(shopifyId)[0];\n            const productInfo = prismicProductData[productId]\n              ? prismicProductData[productId].data\n              : false;\n\n            let productDetailTemplate;\n\n            // console.log(productInfo);\n\n            if (\n              selectedProductCollection == 'cannabis' ||\n              selectedProductCollection == 'cbd'\n            ) {\n              productDetailTemplate = (\n                <HempProductDetail\n                  shopifyProduct={selectedProduct}\n                  productInfo={productInfo}\n                  pageData={pageData}\n                  quotesData={quotesData}\n                  newsletterData={newsletterData}\n                  stockists={stockists}\n                  deliveryZipCodes={deliveryZipCodes}\n                  zipCodeData={zipCodeData}\n                />\n              );\n            } else {\n              productDetailTemplate = (\n                <GearProductDetail\n                  shopifyProduct={selectedProduct}\n                  pageData={pageData}\n                  quotesData={quotesData}\n                  newsletterData={newsletterData}\n                  productInfo={productInfo}\n                  zipCodeData={zipCodeData}\n                  sitewideData={sitewideData}\n                />\n              );\n            }\n\n            return <div>{productDetailTemplate}</div>;\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetail;\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($handle: String!) {\n    shop {\n      productByHandle(handle: $handle) {\n        id\n        title\n        handle\n        description\n        availableForSale\n        collections(first: 1) {\n          edges {\n            node {\n              handle\n            }\n          }\n        }\n        options {\n          id\n          name\n          values\n        }\n        variants(first: 250) {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              id\n              title\n              weight\n              weightUnit\n              selectedOptions {\n                name\n                value\n              }\n              image {\n                src\n              }\n              price\n            }\n          }\n        }\n        images(first: 250) {\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n          edges {\n            node {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { RichText } from 'prismic-reactjs';\n\nexport default class Stockist extends Component {\n  render() {\n    const { stockist, stockistType } = this.props;\n\n    // Retailer\n    if (stockistType == 'retailer' && stockist.stockist_url != '') {\n      const addressURL = `https://www.google.com/maps/place/${RichText.asText(\n        stockist.stockist_address\n      )\n        .split(' ')\n        .join('+')}`;\n\n      return (\n        <ListItem>\n          <a\n            href={\n              stockist.stockist_url != '' &&\n              RichText.asText(stockist.stockist_url)\n            }\n            target=\"_blank\"\n          >\n            <h2>\n              {stockist.stockist_name != '' &&\n                RichText.asText(stockist.stockist_name)}\n            </h2>\n          </a>\n          <p>\n            <a href={addressURL} target=\"_blank\">\n              {stockist.stockist_address != '' &&\n                RichText.asText(stockist.stockist_address)}\n            </a>\n          </p>\n        </ListItem>\n      );\n    }\n    if (stockistType == 'retailer') {\n      const addressURL = `https://www.google.com/maps/place/${RichText.asText(\n        stockist.stockist_address\n      )\n        .split(' ')\n        .join('+')}`;\n\n      return (\n        <ListItem>\n          <a href={addressURL} target=\"_blank\">\n            <h2>\n              {stockist.stockist_name != '' &&\n                RichText.asText(stockist.stockist_name)}\n            </h2>\n            <p>\n              {stockist.stockist_address != '' &&\n                RichText.asText(stockist.stockist_address)}\n            </p>\n          </a>\n        </ListItem>\n      );\n    }\n\n    const deliveryUrl = RichText.asText(stockist.delivery_service_url);\n\n    if (stockist.delivery_service_url != '' && stockistType == 'delivery') {\n      let readableUrl = deliveryUrl.replace(/(^\\w+:|^)\\/\\//, '');\n      readableUrl = readableUrl.replace(/\\/$/, '');\n      return (\n        <ListItem>\n          <a href={deliveryUrl} target=\"_blank\">\n            <h2>\n              {stockist.delivery_service_name != '' &&\n                RichText.asText(stockist.delivery_service_name)}\n            </h2>\n            <p>{readableUrl}</p>\n          </a>\n        </ListItem>\n      );\n    }\n\n    // Delivery Service\n    return (\n      <ListItem>\n        <h2>\n          {stockist.delivery_service_name != '' &&\n            RichText.asText(stockist.delivery_service_name)}\n        </h2>\n      </ListItem>\n    );\n  }\n}\n\nconst ListItem = styled.li`\n  border: 1px solid #cecbc5;\n  padding: 30px;\n  margin-bottom: 20px;\n  @media screen and (max-width: 768px) {\n    padding: 30px 20px;\n  }\n  h2 {\n    font-family: 'Gotham Bold';\n    font-size: 2.4rem;\n    margin: 0;\n    text-transform: uppercase;\n    letter-spacing: 0.1rem;\n    color: #726c59;\n    @media screen and (max-width: 768px) {\n      font-size: 1.8rem;\n      line-height: 1.2;\n    }\n  }\n  p {\n    margin: 0;\n    font-family: 'Nitti Light';\n    color: #333639;\n    font-size: 1.5rem;\n    @media screen and (max-width: 768px) {\n      font-size: 1.3rem;\n      line-height: 1.2;\n      margin-top: 4px;\n    }\n  }\n  a {\n    color: inherit;\n    text-transform: uppercase;\n  }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledSelectWrapper = styled.div`\n  /* Reset Select */\n  select {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -ms-appearance: none;\n    appearance: none;\n    outline: 0;\n    box-shadow: none;\n    border: 0;\n    background: #f6f6f6;\n    border-radius: 0;\n    background-image: none;\n  }\n  /* Custom Select */\n  .select {\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 3em;\n    line-height: 3;\n    background: #f6f6f6;\n    border: 1px solid #d0d0d0;\n    overflow: hidden;\n    border-radius: 0;\n  }\n  select {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0 0 0 20px;\n    color: #333639;\n    font-family: 'Nitti Light', serif;\n    font-size: 1.4rem;\n    letter-spacing: 0.1rem;\n    text-transform: uppercase;\n    cursor: pointer;\n  }\n  select::-ms-expand {\n    display: none;\n  }\n  /* Arrow */\n  .select::after {\n    content: '';\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-top: 5px solid #333639;\n    position: absolute;\n    transform: translateY(-25%);\n    top: 50%;\n    right: 20px;\n    bottom: 0;\n    padding: 0;\n    background: #f6f6f6;\n    pointer-events: none;\n  }\n  .select::after {\n    -webkit-transition: 0.25s all ease;\n    -o-transition: 0.25s all ease;\n    transition: 0.25s all ease;\n  }\n`;\n\nclass VariantSelector extends Component {\n  render() {\n    return (\n      <StyledSelectWrapper>\n        <div className=\"select\">\n          <select\n            className=\"Product__option\"\n            name={this.props.option.name}\n            key={this.props.option.name}\n            onChange={this.props.handleOptionChange}\n          >\n            {this.props.option.values.map(value => (\n              <option\n                value={value}\n                key={`${this.props.option.name}-${value}`}\n              >{`${value}`}</option>\n            ))}\n          </select>\n        </div>\n      </StyledSelectWrapper>\n    );\n  }\n}\n\nexport default VariantSelector;\n","import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ZipCodeCheckStyles from './styles/ZipCodeCheckStyles';\nimport ZipCodeForm from './ZipCodeForm';\n\nconst ZIP_SCREEN_QUERY = gql`\n  query {\n    zipCodeCheckOpen @client\n  }\n`;\n\nconst TOGGLE_ZIP_MUTATION = gql`\n  mutation {\n    toggleZipCodeCheck @client\n  }\n`;\n\nconst ZIP_CODE_QUERY = gql`\n  query {\n    zipCode @client\n  }\n`;\n\nconst UPDATE_ZIP_CODE_MUTATION = gql`\n  mutation($zipCode: String!) {\n    updateZipCode(zipCode: $zipCode) @client\n  }\n`;\n\nclass ZipCodeCheck extends Component {\n  state = {\n    slide: 0, // How much should the Navbar slide up or down\n    lastScrollY: 0, // Keep track of current position in state\n    opacityVal: 1,\n  };\n\n  componentDidMount() {\n    // When this component mounts, begin listening for scroll changes\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    // If this component is unmounted, stop listening\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const { lastScrollY } = this.state;\n    const currentScrollY = window.scrollY;\n\n    if (currentScrollY > lastScrollY && currentScrollY > 150) {\n      this.props.client.writeData({\n        data: {\n          zipCodeCheckOpen: false,\n        },\n      });\n    }\n  };\n\n  toggleZipCodeScreen = (e, toggleZipCodeCheck) => {\n    if (e.target.closest('.zip-code-check-wrapper') == null) {\n      toggleZipCodeCheck();\n    }\n  };\n\n  render() {\n    return (\n      <Mutation mutation={TOGGLE_ZIP_MUTATION}>\n        {toggleZipCodeCheck => (\n          <Query query={ZIP_SCREEN_QUERY}>\n            {({ data }) => (\n              <ZipCodeCheckStyles\n                open={data.zipCodeCheckOpen}\n                style={{\n                  marginTop: `${this.state.slide}`,\n                  opacity: `${this.state.opacityVal}`,\n                }}\n                onClick={e => this.toggleZipCodeScreen(e, toggleZipCodeCheck)}\n              >\n                <div className=\"zip-code-check-wrapper\">\n                  <h2>Update your location:</h2>\n                  <ZipCodeForm\n                    placeholderText=\"EX: 90028\"\n                    buttonText=\"Update\"\n                  />\n                </div>\n              </ZipCodeCheckStyles>\n            )}\n          </Query>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default ZipCodeCheck;\nexport {\n  ZIP_SCREEN_QUERY,\n  TOGGLE_ZIP_MUTATION,\n  ZIP_CODE_QUERY,\n  UPDATE_ZIP_CODE_MUTATION,\n};\n","import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\n\nimport zipcodes from 'zipcodes';\nimport { UPDATE_ZIP_CODE_MUTATION } from './ZipCodeCheck';\nimport { TOGGLE_ZIP_BANNER_MUTATION } from './DeliveryBanner';\nimport Input from './styles/Input';\n\nexport default class Delivery extends Component {\n  state = {\n    zipCode: '',\n    invalidZip: false,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    if (value.length < 6) {\n      this.setState({ [name]: value });\n    }\n  };\n\n  render() {\n    const { placeholderText, buttonText, findNearestStockists } = this.props;\n    return (\n      <Mutation mutation={TOGGLE_ZIP_BANNER_MUTATION}>\n        {(toggleZipBanner, { loading, error }) => (\n          <Mutation mutation={UPDATE_ZIP_CODE_MUTATION} variables={this.state}>\n            {(updateZipCode, { loading, error }) => (\n              <fieldset disabled={loading} aria-busy={loading}>\n                <form\n                  action=\"\"\n                  autoComplete=\"off\"\n                  onSubmit={async e => {\n                    e.preventDefault();\n\n                    // Check for valid zip syntax (5 numbers)\n                    const isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(\n                      this.state.zipCode\n                    );\n\n                    // Look up zip code in valid zip codes\n                    const locationInfo = zipcodes.lookup(\n                      this.state.zipCode\n                    );\n\n                    if (!isValidZip || locationInfo == undefined) {\n                      this.setState({ invalidZip: true });\n                      return;\n                    }\n\n                    // IS VALID ZIP -> Store in Apollo state\n                    this.setState({ invalidZip: false });\n                    const res = await updateZipCode();\n\n                    // Reset form\n                    this.setState({ zipCode: '' });\n                  }}\n                >\n                  <div className=\"validation-wrapper\">\n                    <Input\n                      type=\"number\"\n                      id=\"zipCode\"\n                      name=\"zipCode\"\n                      placeholder={placeholderText}\n                      value={this.state.zipCode}\n                      onChange={this.handleChange}\n                    />\n                    {this.state.invalidZip && (\n                      <p className=\"error-message\">\n                        Please enter a valid 5 digit zip code.\n                      </p>\n                    )}\n                  </div>\n\n                  <button type=\"submit\" className=\"wider\">\n                    {buttonText}\n                  </button>\n                </form>\n              </fieldset>\n            )}\n          </Mutation>\n        )}\n      </Mutation>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nconst BuyButton = styled.button`\n  background: #333639;\n  color: #f6f6f6;\n  padding: 18px 50px;\n  text-transform: uppercase;\n  font-family: 'Gotham Bold', sans-serif;\n  letter-spacing: 0.1rem;\n  display: block;\n  width: 100%;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.3rem;\n  line-height: 1;\n  transition: all 0.4s ease-in-out;\n  &.add-to-cart {\n    margin-top: 30px;\n  }\n  &.wider {\n    max-width: 554px;\n    width: 100%;\n    padding: 20px 50px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    margin-top: 70px;\n  }\n  &:hover {\n    background-color: #242628;\n  }\n  &:disabled {\n    cursor: default;\n    &:hover {\n      background: #333639;\n    }\n  }\n`;\n\nexport default BuyButton;\n","import styled from 'styled-components';\n\nconst ButtonGold = styled.button`\n  background: #726c59;\n  ${props =>\n    props.backgroundColor && `background-color: ${props.backgroundColor};`};\n  color: #f6f6f6;\n  padding: 12px 50px;\n  text-transform: uppercase;\n  font-family: 'Gotham Bold', sans-serif;\n  font-size: 1.3rem;\n  line-height: 1;\n  letter-spacing: 0.1rem;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  &.wider {\n    max-width: 554px;\n    width: 100%;\n    padding: 20px 50px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    margin-top: 70px;\n  }\n  &:hover {\n    ${props => !props.backgroundColor && `background-color: #686351;`};\n  }\n`;\n\nexport default ButtonGold;\n","import styled, { keyframes } from 'styled-components';\n\nconst slideDownBanner = keyframes`\n  0%, 100% {\n    /* transform: translateY(-200%); */\n  }\n  4%, 96% {\n    transform: translateY(0);\n  }\n`;\n\nconst DeliveryBarStyles = styled.div`\n  padding: 40px 20px 22px;\n  position: fixed;\n  background: rgba(88, 83, 68, 0.9);\n  color: white;\n  top: 75px;\n  right: 0;\n  left: 0;\n  width: 100%;\n  transform: translateY(-200%);\n  transition: all 0.3s ease-out;\n  z-index: 90;\n  text-align: center;\n  overflow-y: scroll;\n  text-transform: uppercase;\n  ${props =>\n    props.zipUpdated && `animation: 1.5s ${slideDownBanner} ease-out;`};\n  ${props => (props.position == 'down' ? `top: 75px;` : `top: -20px;`)};\n  @media screen and (max-width: 960px) {\n    padding: 16px 20px;\n    ${props => (props.position == 'down' ? `top: 45px;` : `top: 0;`)};\n  }\n  p {\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport default DeliveryBarStyles;\n","import styled from 'styled-components';\n\nconst DetailDeliveryStyles = styled.div`\n  text-align: center;\n  padding-top: 1.7rem;\n  border-top: 1px solid #dadad9;\n  h2 {\n    font-family: 'Lora regular';\n    font-size: 2rem;\n    margin-bottom: 2.5rem;\n  }\n  h3 {\n    font-size: 1.6rem;\n    margin-bottom: 3rem;\n  }\n  input {\n    display: block;\n    width: 100%;\n    font-family: inherit;\n    border: 0;\n    padding: 16px 12px;\n    background-color: white;\n    box-shadow: none;\n    outline: none;\n    font-size: 1.3rem;\n    margin-bottom: 1.2rem;\n    text-transform: uppercase;\n  }\n  button,\n  .text-button {\n    display: block;\n    width: 100%;\n    padding: 20px 12px 20px;\n    text-align: center;\n    background-color: #333639;\n    color: white;\n    font-size: 1.3rem;\n    font-family: 'Gotham Bold';\n    text-transform: uppercase;\n    letter-spacing: 0.1rem;\n    line-height: 1;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    &:hover {\n      background-color: #242628;\n    }\n    &.dark-button {\n      max-width: 492px;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n  .text-button {\n    background: none;\n    padding: 0;\n    color: #9c8d72;\n    font-size: 1rem;\n    margin-top: 3rem;\n    &:hover {\n      background: none;\n    }\n  }\n  .not-in-ca {\n    font-size: 1rem;\n    font-family: 'Gotham Bold', sans-serif;\n    text-transform: uppercase;\n    margin-top: 2rem;\n    margin-bottom: 1.5rem;\n    color: #9c8d72;\n  }\n  .no-delivery-wrapper {\n    h2 {\n      font-size: 1.7rem;\n      max-width: 80%;\n      text-align: left;\n      color: #333639;\n      margin-bottom: 0;\n      img {\n        display: inline-block;\n        margin-right: 20px;\n      }\n    }\n  }\n  .stockists-and-retailers {\n    max-height: 350px;\n    overflow-y: scroll;\n    li {\n      text-align: left;\n      border: 0;\n      border-bottom: 1px solid #ecebe9;\n      padding: 20px 0;\n      margin: 0;\n      h2 {\n        font-size: 1.4rem;\n        font-family: 'Gotham Bold';\n      }\n      p {\n        font-size: 1.2rem;\n      }\n    }\n    .section-title {\n      font-family: 'Gotham Bold', sans-serif;\n      font-size: 1.6rem;\n      text-transform: uppercase;\n      color: #333639;\n      margin: 35px 0 0;\n      letter-spacing: 0.1rem;\n    }\n  }\n  .view-more {\n    font-size: 1.1rem;\n    text-transform: uppercase;\n    font-family: 'Gotham Bold', sans-serif;\n    letter-spacing: 0.1rem;\n    color: #9c8d72;\n    padding-top: 30px;\n    display: inline-block;\n  }\n`;\n\nexport default DetailDeliveryStyles;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  display: block;\n  text-transform: uppercase;\n  width: 100%;\n  font-family: inherit;\n  border: 0;\n  padding: 16px 12px;\n  background-color: white;\n  box-shadow: none;\n  outline: none;\n  font-size: 1.3rem;\n  margin-bottom: 1.2rem;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst LearnMore = styled.section`\n  padding-top: 100px;\n  &.padding-bottom {\n    padding-bottom: 100px;\n  }\n  &.no-padding-top {\n    padding-top: 0;\n  }\n  .quote {\n    font-size: 2.2rem;\n    color: #333639;\n    line-height: 1.4;\n    margin-bottom: 16px;\n  }\n  .publication {\n    margin-bottom: 40px;\n  }\n  @media screen and (max-width: 758px) {\n    text-align: center;\n  }\n`;\n\nexport default LearnMore;\n","import styled from 'styled-components';\n\nconst NewsletterCallout = styled.div`\n  background-color: #c4c0b0;\n  padding-top: 88px;\n  padding-bottom: 110px;\n  .quote {\n    font-size: 4.3rem;\n    font-family: 'Lora Regular', serif;\n    line-height: 1.15;\n    max-width: 864px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .container {\n    max-width: 682px;\n    text-align: center;\n  }\n  button {\n    padding: 20px 0;\n    font-size: 1.3rem;\n  }\n  h4 {\n    font-family: 'Lora Regular', serif;\n    font-size: 2.2rem;\n    letter-spacing: 0.08rem;\n    margin-bottom: 40px;\n    @media screen and (max-width: 768px) {\n      max-width: 280px;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n`;\n\nexport default NewsletterCallout;\n","import styled from 'styled-components';\n\nconst ZipCodeCheckStyles = styled.div`\n  position: absolute;\n  position: fixed;\n  top: 75px;\n  right: 0;\n  left: 0;\n  width: 100%;\n  transform: translateY(-120%);\n  transition: all 0.3s;\n  z-index: 90;\n  text-align: center;\n  overflow-y: scroll;\n  height: 100%;\n  @media screen and (max-width: 960px) {\n    top: 44px;\n  }\n  .zip-code-check-wrapper {\n    padding: 90px 20px;\n    /*  585344*/\n    background: #3B3F38;\n    color: white;\n  }\n\n  ${props => props.open && `transform: translateY(0);`};\n  /* box-shadow: rgba(0, 0, 0, 0.3) 0 2px 30px; */\n  h2 {\n    color: white;\n    font-family: 'Lora Regular', serif;\n    font-size: 3.8rem;\n    letter-spacing: 0.1rem;\n    margin-top: 0;\n    line-height: 1.1;\n    @media screen and (max-width: 768px) {\n      font-size: 3.2rem;\n      line-height: 1.2;\n    }\n  }\n  fieldset {\n    border: none;\n  }\n  form {\n    max-width: 440px;\n    margin: 0 auto;\n  }\n  .zip-close {\n    position: absolute;\n    background: transparent;\n    top: 0;\n    right: 0;\n    color: white;\n  }\n  .validation-wrapper {\n    position: relative;\n    padding-bottom: 20px;\n    margin-bottom: 18px;\n  }\n  .error-message {\n    position: absolute;\n    bottom: -15px;\n    left: 0;\n    width: 100%;\n    text-align: left;\n    font-size: 1.2rem;\n  }\n  input {\n    padding: 14px 14px 14px 0;\n    margin-bottom: 0;\n    background: transparent;\n    color: white;\n    border-bottom: 1px solid #8a8475;\n    font-size: 2.6rem;\n    text-align: left;\n    position: relative;\n    transition: all 0.3s ease-in-out;\n\n    &:focus {\n      border-bottom: 1px solid white;\n    }\n    ::-webkit-input-placeholder {\n      /* Chrome/Opera/Safari */\n      color: #8a8475;\n    }\n    ::-moz-placeholder {\n      /* Firefox 19+ */\n      color: #8a8475;\n    }\n    :-ms-input-placeholder {\n      /* IE 10+ */\n      color: #8a8475;\n    }\n    :-moz-placeholder {\n      /* Firefox 18- */\n      color: #8a8475;\n    }\n  }\n  button {\n    background: #726c59;\n    color: #f6f6f6;\n    text-transform: uppercase;\n    font-family: 'Gotham Bold', sans-serif;\n    font-size: 1.3rem;\n    line-height: 1;\n    letter-spacing: 0.1rem;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    max-width: 554px;\n    width: 100%;\n    padding: 20px 50px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    margin-top: 0;\n\n    &:hover {\n      background-color: #686351;\n    }\n  }\n  .wider {\n    margin-top: 0;\n    background-color: #988c66;\n  }\n`;\n\nexport default ZipCodeCheckStyles;\n","import styled from 'styled-components';\n\nexport const ProductDetailPage = styled.main`\n  background-color: #ecebe9;\n  padding-top: 60px;\n\n  h1 {\n    font-size: 1.8rem;\n    color: #333639;\n    margin-bottom: 6px;\n  }\n  .thin-caps,\n  .info-item {\n    font-family: 'Nitti Light', serif;\n    font-size: 1.2rem;\n    text-transform: uppercase;\n    letter-spacing: 0.06rem;\n    margin-bottom: 6px;\n    margin-top: 0;\n    color: #69574e;\n  }\n  .dashed-underline {\n    border-bottom: 1px dashed #9e9781;\n  }\n  .product-info-card {\n    background-color: #f6f6f6;\n    padding: 30px;\n    @media screen and (max-width: 768px) {\n      padding: 20px;\n    }\n    .description {\n      padding-top: 2rem;\n      padding-bottom: 3rem;\n    }\n    .type {\n      color: #7c7769;\n      font-family: 'Gotham Bold', sans-serif;\n      font-size: 1.6rem;\n      text-transform: uppercase;\n      letter-spacing: 0.1rem;\n      display: flex;\n      align-items: center;\n    }\n    .percent {\n      font-family: 'Nitti Bold', serif;\n      text-transform: uppercase;\n      font-size: 1.7rem;\n      letter-spacing: 0.08rem;\n      color: #333639;\n      span {\n        font-family: 'Gotham Book';\n        font-size: 1.45rem;\n        color: #6b6653;\n      }\n    }\n    .icon {\n      display: inline-block;\n      margin-right: 12px;\n      position: relative;\n      bottom: 2px;\n    }\n    .thin-caps,\n    .info-item {\n      color: #69574e;\n    }\n    .info-item span:nth-of-type(2) {\n      color: #333639;\n    }\n    .info-items {\n      margin-top: 40px;\n      margin-bottom: 100px;\n    }\n    .farms {\n      margin-top: 25px;\n    }\n  }\n  .farms span,\n  .farms a {\n    color: #333639;\n    font-family: 'Gotham Bold', sans-serif;\n    font-size: 1.2rem;\n    letter-spacing: 0.08rem;\n    text-transform: uppercase;\n    line-height: 1;\n  }\n  .farms {\n    margin-bottom: 6px;\n  }\n  .header {\n    padding-bottom: 100px;\n  }\n`;\n\nexport const InsidePackSection = styled.section`\n  background-color: #e8e7e5;\n  padding-top: 100px;\n  padding-bottom: 150px;\n  .rich-text {\n    font-family: 'Nitti Light', serif;\n    font-size: 1.3rem;\n    color: #333639;\n    letter-spacing: 0.1rem;\n    max-width: 410px;\n    margin-bottom: 35px;\n  }\n  h3 {\n    font-family: 'Lora Regular', serif;\n    font-size: 3rem;\n    color: #6b6653;\n    letter-spacing: 0.08rem;\n    margin-bottom: 4px;\n    margin-top: 0;\n  }\n  h5 {\n    color: #69574e;\n    font-size: 1.1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.1rem;\n    font-family: 'Gotham Bold', sans-serif;\n    border-bottom: 1px solid #69574e;\n    padding-bottom: 8px;\n    margin-top: 14px;\n    margin-bottom: 0;\n  }\n\n  .inside-pack-list {\n    margin-top: 18px;\n  }\n  .inside-pack-list:first-of-type {\n    margin-top: 0;\n  }\n  li {\n    margin: 0;\n  }\n  li span {\n    padding-top: 6px;\n  }\n  li:first-of-type span {\n    padding-top: 20px;\n  }\n  li:last-of-type span {\n    padding-bottom: 18px;\n  }\n  .border-left {\n    border-left: 1px solid #69574e;\n    padding-left: 20px;\n  }\n`;\n\nexport const CannabisLinks = styled.section`\n  .container {\n    max-width: 1053px;\n  }\n  .cols-2 {\n    @media screen and (min-width: 1058px) {\n      grid-column-gap: 65px;\n    }\n  }\n  .link-card {\n    border: 1px solid #979797;\n    text-align: center;\n    font-family: 'Lora Regular', serif;\n    padding: 50px 20px 30px;\n  }\n  h3 {\n    font-size: 5.8rem;\n    max-width: 300px;\n    line-height: 1;\n    margin: 0 auto 45px;\n  }\n  p {\n    font-size: 1.6rem;\n  }\n`;\n","// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444`;\nexport const perPage = 4;\nexport const PRISMIC_API_URL = 'https://lowell-herb-co.prismic.io/api/v2';\n","// Link Resolver\nfunction linkResolver(doc) {\n  // Define the url depending on the document type\n  if (doc.type === 'page') {\n    return `/page/${doc.uid}`;\n  }\n  if (doc.type === 'blog_post') {\n    return `/blog/${doc.uid}`;\n  }\n\n  // Default to homepage\n  return '/';\n}\n\nfunction mapStockistsToZip(stockists) {\n  return stockists.map(stockist => {\n    if (stockist.stockist_address != '') {\n      const str = stockist.stockist_address[0].text;\n      const fiveDigitNumbers = str.match(/\\b\\d{5}\\b/g);\n      // Get last five digit number - the zip code\n      const zip =\n        fiveDigitNumbers != undefined ? fiveDigitNumbers.slice(-1)[0] : '';\n\n      // console.log(parseInt(zip, 10)); // [\"12345\", \"54321\"]\n      stockist.zip = zip;\n    }\n\n    return stockist;\n  });\n}\n\nfunction findClosestDeliveryServices(allDeliveryServices, zipCode) {\n  const closestDeliveryServices = [];\n\n  for (let i = 0; i < allDeliveryServices.length; i++) {\n    // console.log(allDeliveryServices[i]);\n    if (allDeliveryServices[i].delivery_service_zip_codes != '') {\n      const deliveryZipCodes =\n        allDeliveryServices[i].delivery_service_zip_codes[0].text;\n\n      const isInDeliveryRange = deliveryZipCodes.includes(zipCode);\n      // console.log(isInDeliveryRange);\n\n      // console.log(distance);\n      if (isInDeliveryRange) {\n        closestDeliveryServices.push(allDeliveryServices[i]);\n      }\n    }\n  }\n\n  return closestDeliveryServices;\n}\n\nfunction findClosestRetailers(allRetailers, zipCode, zipcodes) {\n  // Find retailers and delivery services closest to zip code\n  const closestRetailers = [];\n\n  for (let i = 0; i < allRetailers.length; i++) {\n    if (allRetailers[i].zip != undefined) {\n      allRetailers[i].distance =\n        zipCode != null\n          ? zipcodes.distance(zipCode, allRetailers[i].zip)\n          : 1001;\n\n      // console.log(distance);\n      if (allRetailers[i].distance != null) {\n        closestRetailers.push(allRetailers[i]);\n      }\n    }\n  }\n\n  closestRetailers.sort(function(a, b) {\n    return a.distance - b.distance;\n  });\n\n  return closestRetailers;\n}\n\nmodule.exports = {\n  linkResolver,\n  mapStockistsToZip,\n  findClosestDeliveryServices,\n  findClosestRetailers,\n};\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { getPageApi, getPageByType } from '../api';\nimport ProductDetail from '../components/ProductDetail';\n\nclass productDetailPage extends Component {\n  static async getInitialProps() {\n    // Query the Prismic API with the ID of the page\n    const pageId = 'XKFQDxAAADkksUUv';\n    const response = await getPageApi(pageId);\n\n    const productsResponse = await getPageByType('product');\n    const gearProductsResponse = await getPageByType('gear_product');\n\n    const stockistsId = 'XJbmbhEAAPHUozLk';\n    const stockistsResponse = await getPageApi(stockistsId);\n\n    return {\n      page: response,\n      products: productsResponse,\n      gearProducts: gearProductsResponse,\n      stockists: stockistsResponse,\n    };\n  }\n\n  render() {\n    const {\n      page,\n      quotes,\n      products,\n      query,\n      newsletter,\n      gearProducts,\n      stockists,\n      zipCodes,\n      sitewideData,\n    } = this.props;\n    const { data } = page;\n\n    const deliveryZones = zipCodes.cannabis_delivery_zones.map(\n      zipCodeItem => zipCodeItem.zip_code\n    );\n    return (\n      <ProductDetail\n        handle={query.handle}\n        pageData={data}\n        quotesData={quotes}\n        products={products}\n        gearProducts={gearProducts}\n        newsletterData={newsletter}\n        stockists={stockists.data}\n        deliveryZipCodes={deliveryZones}\n        zipCodeData={zipCodes}\n        sitewideData={sitewideData.data}\n      />\n    );\n  }\n}\n\nexport default productDetailPage;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"base-64\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"prismic-javascript\");","module.exports = require(\"prismic-reactjs\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-moment\");","module.exports = require(\"styled-components\");","module.exports = require(\"zipcodes\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAUA;AAHA;AACA;AARA;AAOA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAMA;AAAA;AACA;AAPA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAMA;AAAA;AACA;AAPA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AAEA;AAeA;AAMA;AAMA;AA2BA;AAcA;AAcA;AACA;AAaA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AAKA;AAIA;AA9BA;AAgCA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAYA;AAGA;;;;AApEA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AACA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AArBA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAcA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAaA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAcA;AA/JA;AAoKA;;;;AA5MA;AACA;AA8MA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAFA;AALA;AASA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAMA;AAIA;AACA;AAGA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AAFA;AAKA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAYA;AACA;AAAA;AACA;AAMA;AAIA;AAEA;AADA;AAGA;AAAA;AAGA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AAHA;AAYA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAQA;AAAA;AAGA;AACA;AACA;AAHA;AAYA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AALA;AASA;AAOA;AAAA;AACA;AAAA;AAOA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAGA;;;;AAvNA;AACA;AAyNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjPA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AALA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AAFA;AAOA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AARA;AACA;AAUA;AAGA;AAEA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AAKA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAMA;AAPA;AAWA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;AAHA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AACA;AAFA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AASA;AAAA;AAAA;AAGA;;;;AApMA;AACA;AAsMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AApBA;AACA;AAqBA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AAC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","sourceRoot":""}